{
	"format_version": "1.0.0",
	"default_step_lib_source": "https://github.com/bitrise-io/bitrise-steplib.git",
	"app": {
		"envs": [
			{
				"BITRISE_PROJECT_TITLE": "lesson_5",
				"opts": {
					"title": "",
					"description": "",
					"summary": "",
					"is_required": false,
					"is_expand": true,
					"is_dont_change_value": false
				}
			},
			{
				"BITRISE_DEV_BRANCH": "master",
				"opts": {
					"title": "",
					"description": "",
					"summary": "",
					"is_required": false,
					"is_expand": true,
					"is_dont_change_value": false
				}
			},
			{
				"PROJECT_TITLE": "BitriseSampleWithYML",
				"opts": {
					"title": "",
					"description": "",
					"summary": "",
					"is_required": false,
					"is_expand": true,
					"is_dont_change_value": false
				}
			},
			{
				"XCODE_PROJECT_PATH": "./sample-apps-ios-with-bitrise-yml/${PROJECT_TITLE}.xcodeproj",
				"opts": {
					"title": "",
					"description": "",
					"summary": "",
					"is_required": false,
					"is_expand": true,
					"is_dont_change_value": false
				}
			},
			{
				"XCODE_PROJECT_SCHEME": "${PROJECT_TITLE}",
				"opts": {
					"title": "",
					"description": "",
					"summary": "",
					"is_required": false,
					"is_expand": true,
					"is_dont_change_value": false
				}
			},
			{
				"BITRISE_KEYCHAIN_PATH": "$HOME/Library/Keychains/login.keychain",
				"opts": {
					"title": "",
					"description": "",
					"summary": "",
					"is_required": false,
					"is_expand": true,
					"is_dont_change_value": false
				}
			},
			{
				"BITRISE_KEYCHAIN_PASSWORD": "vagrant",
				"opts": {
					"title": "",
					"description": "",
					"summary": "",
					"is_required": false,
					"is_expand": true,
					"is_dont_change_value": false
				}
			}
		]
	},
	"workflows": {
		"_cleanup": {
			"description": "This is a utility workflow. It runs a script to delete the folders created in the setup.",
			"steps": [
				{
					"script": {
						"title": "Cleanup folder",
						"description": "A script step to delete the downloaded Step folder.",
						"source": {},
						"run_if": "not .IsCI",
						"inputs": [
							{
								"content": "#!/bin/bash\nrm -rf $PROJECT_TITLE",
								"opts": {}
							}
						]
					}
				}
			]
		},
		"_download_certs": {
			"summary": "This workflow downloads the needed certificates on the CI server and adds them to the keychain.",
			"description": "This is a utility workflow, used by other workflows.",
			"steps": [
				{
					"git::https://github.com/bitrise-io/steps-certificate-and-profile-installer.git@master": {
						"description": "This step will only be used in CI mode, on continuous integration\nservers / services (because of the `run_if` statement),\nbut **NOT** when you run it on your own machine.",
						"source": {},
						"run_if": ".IsCI",
						"inputs": [
							{
								"keychain_path": "$BITRISE_KEYCHAIN_PATH",
								"opts": {}
							},
							{
								"keychain_password": "$BITRISE_KEYCHAIN_PASSWORD",
								"opts": {}
							}
						]
					}
				}
			]
		},
		"_setup": {
			"description": "Clone repo",
			"steps": [
				{
					"script": {
						"title": "clone",
						"source": {},
						"inputs": [
							{
								"content": "#!/bin/bash\necho $XCODE_PROJECT_PATH\nif [ ! -d $PROJECT_FOLDER ] ; then\n  git clone ${REPO_URL}\nelse\n  cd $PROJECT_FOLDER\n  git pull\nfi",
								"opts": {}
							}
						]
					}
				}
			]
		},
		"analyze": {
			"description": "This workflow will run Xcode analyze on this project,\nbut first it'll run the workflows listed in\nthe `before_run` section.",
			"before_run": [
				"_setup",
				"_download_certs"
			],
			"steps": [
				{
					"script": {
						"title": "Run Xcode analyze",
						"source": {},
						"inputs": [
							{
								"content": "xcodebuild -project \"${XCODE_PROJECT_PATH}\" -scheme \"${XCODE_PROJECT_SCHEME}\" analyze",
								"opts": {}
							}
						]
					}
				}
			]
		},
		"archive": {
			"description": "This workflow will run Xcode archive on this project,\nbut first it'll run the workflows listed in\nthe `before_run` section.",
			"before_run": [
				"_setup",
				"test",
				"_download_certs"
			],
			"steps": [
				{
					"xcode-archive": {
						"title": "Run Xcode archive",
						"source": {},
						"inputs": [
							{
								"opts": {},
								"project_path": "${XCODE_PROJECT_PATH}"
							},
							{
								"opts": {},
								"scheme": "${XCODE_PROJECT_SCHEME}"
							},
							{
								"opts": {},
								"output_dir": "$output_dir"
							}
						],
						"outputs": [
							{
								"BITRISE_IPA_PATH": null,
								"opts": {
									"title": "The created .ipa file's path"
								}
							}
						]
					}
				}
			]
		},
		"master": {
			"description": "This workflow is meant to be used on a CI server (like bitrise.io), for continuous\ndeployment, but of course you can run it on your own Mac as well,\nexcept the Step which deploys to Bitrise.io - that's marked with\na Run-If statement to be skipped, unless you run bitrise in --ci mode.",
			"before_run": [
				"archive"
			],
			"after_run": [
				"_cleanup"
			],
			"steps": [
				{
					"script": {
						"source": {},
						"inputs": [
							{
								"content": "#!/bin/bash\necho \"-\u003e BITRISE_IPA_PATH: ${BITRISE_IPA_PATH}\"",
								"opts": {}
							}
						]
					}
				},
				{
					"bitrise-ios-deploy": {
						"description": "The long `run_if` here is a workaround. At the moment Bitrise.io\ndefines the BITRISE_PULL_REQUEST environment\nin case the build was started by a Pull Request, and not the\nrequired PULL_REQUEST_ID - so we'll check for that instead.",
						"source": {},
						"run_if": "enveq \"BITRISE_PULL_REQUEST\" \"\" | and .IsCI",
						"inputs": [
							{
								"notify_user_groups": "none",
								"opts": {}
							},
							{
								"is_enable_public_page": "yes",
								"opts": {}
							}
						],
						"outputs": [
							{
								"BITRISE_PUBLIC_INSTALL_PAGE_URL": null,
								"opts": {
									"title": "Public Install Page URL",
									"description": "Public Install Page's URL, if the\n*Enable public page for the App?* option was *enabled*."
								}
							}
						]
					}
				},
				{
					"slack": {
						"source": {},
						"run_if": ".IsCI",
						"inputs": [
							{
								"opts": {},
								"webhook_url": "${SLACK_WEBHOOK_URL}"
							},
							{
								"channel": "${SLACK_CHANNEL}",
								"opts": {}
							},
							{
								"from_username": "${PROJECT_TITLE} - OK",
								"opts": {}
							},
							{
								"from_username_on_error": "${PROJECT_TITLE} - ERROR",
								"opts": {}
							},
							{
								"message": "CI check - OK\nPULL_REQUEST_ID : ${PULL_REQUEST_ID}\nBITRISE_PUBLIC_INSTALL_PAGE_URL: ${BITRISE_PUBLIC_INSTALL_PAGE_URL}",
								"opts": {}
							},
							{
								"message_on_error": "CI check - FAILED\nPULL_REQUEST_ID : ${PULL_REQUEST_ID}",
								"opts": {}
							}
						]
					}
				}
			]
		},
		"test": {
			"steps": [
				{
					"xcode-test": {
						"title": "Run Xcode test",
						"source": {},
						"inputs": [
							{
								"opts": {},
								"project_path": "${XCODE_PROJECT_PATH}"
							},
							{
								"opts": {},
								"scheme": "${XCODE_PROJECT_SCHEME}"
							},
							{
								"opts": {},
								"simulator_device": "iPhone 6"
							},
							{
								"opts": {},
								"simulator_os_version": "latest"
							},
							{
								"is_clean_build": "no",
								"opts": {}
							}
						]
					}
				}
			]
		}
	}
}